<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="kaiwa1" id="1" localization="8" tooltip="" x="241" y="324">
                            <dialogFile>kaiwa1/kaiwa1.dlg</dialogFile>
                            <bitmap>media/images/box/box-dialog.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="pointTablet" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                            <Output name="showImage" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                            <Output name="hideImage" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="7" />
                        </Box>
                        <Box name="Show Image" id="13" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="538" y="214">
                            <bitmap>media/images/box/interaction/rec_movie.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        self.frameManager = None
        self.preferanceManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)


    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def _onPreLoadImage(self, partialUrl):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def _getPathWithCb(self, baseName):
        return str("images/%s?%s" % (baseName , self.cb))

    def onInput_onPrepare(self):
        import time

        preferenceManager = ALProxy("ALPreferenceManager")
        prefDomainName = "KaiwaAndTablet." + self.packageUid()
        self.cb = preferenceManager.getValue(prefDomainName, "cb")

        if self.getParameter("mode") == "開発" or self.cb == None:
            self.cb = str(time.time())
            preferenceManager.setValue(prefDomainName, "cb", self.cb)

        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.resetTablet()
                imageDir = self.frameManager.getBehaviorPath(self.behaviorId) + "/html/images"
                self.logger.info(imageDir)
                if os.path.isdir(imageDir):
                    files = os.listdir(imageDir)
                    for file in files:
                        fileWithCb = self._getPathWithCb(file)
                        self.logger.info("preloading image:%s" % fileWithCb)
                        self._onPreLoadImage(fileWithCb)

            except Exception as e:
                self.logger.error(e)


    def onInput_onShowImage(self,url):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getPathWithCb(url)
                    self.logger.info("showImage:" + url)
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onPrepare" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
                            <Input name="onShowImage" type="3" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="3" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                            <Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="5" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                            <Parameter name="mode" inherits_from_parent="0" content_type="3" value="開発" default_value="開発" custom_choice="0" tooltip="" id="7">
                                <Choice value="開発" />
                                <Choice value="製品" />
                            </Parameter>
                        </Box>
                        <Box name="Init" id="2" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="103" y="326">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #put clean-up code here
        pass


    def onInput_onStart(self):

        #言語設定
        try:
            tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            tts = None

        try:
            asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            asr = None

        try:
            dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            dialog = None

        lang = "Japanese"
        try:
            if asr:
                asr.setLanguage( lang )
            if tts:
                tts.setLanguage( lang )
            if dialog:
                dialog.setLanguage( lang )
            if tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)

        #Dialog 閾値の変更
        dialog.setConfidenceThreshold("BNF", self.getParameter("音声認識閾値_"))
        dialog.setConfidenceThreshold("SLM", self.getParameter("音声認識閾値_"))

        #聞いているときの動き
        listingMovement = ALProxy("ALListeningMovement")
        listingMovement.setEnabled(True)

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="音声認識閾値_" inherits_from_parent="0" content_type="2" value="0.45" default_value="0.4" min="0" max="1" tooltip="" id="5" />
                        </Box>
                        <Box name="n_タブレットに注目" id="4" localization="8" tooltip="Enter tooltip here" x="535" y="76">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="92" size="92">
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="25" value="-11.4591" />
                                        <Key frame="37" value="15" />
                                        <Key frame="65" value="15" />
                                        <Key frame="89" value="-11.4592" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="25" value="4.93669e-06" />
                                        <Key frame="37" value="-2.95486e-05" />
                                        <Key frame="65" value="-2.95486e-05" />
                                        <Key frame="89" value="0" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="-49.1" />
                                        <Key frame="35" value="-89.5" />
                                        <Key frame="65" value="-89.5" />
                                        <Key frame="89" value="-84.6388" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="35.9501" />
                                        <Key frame="35" value="2.9" />
                                        <Key frame="65" value="2.9" />
                                        <Key frame="89" value="-6.20701" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="25" value="0.9988" />
                                        <Key frame="35" value="1" />
                                        <Key frame="65" value="1" />
                                        <Key frame="89" value="0" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="-22.2" />
                                        <Key frame="35" value="29.3" />
                                        <Key frame="65" value="29.3" />
                                        <Key frame="89" value="81.2851" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="40.081" />
                                        <Key frame="35" value="53.2" />
                                        <Key frame="65" value="53.2" />
                                        <Key frame="89" value="52" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="-102.743" />
                                        <Key frame="35" value="-104.5" />
                                        <Key frame="65" value="-104.5" />
                                        <Key frame="89" value="-88.6804" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="49.1" />
                                        <Key frame="35" value="89.5" />
                                        <Key frame="65" value="89.5" />
                                        <Key frame="89" value="84.6388" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="-35.9501" />
                                        <Key frame="35" value="-2.9" />
                                        <Key frame="65" value="-2.9" />
                                        <Key frame="89" value="6.20701" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="25" value="0.9988" />
                                        <Key frame="35" value="1" />
                                        <Key frame="65" value="1" />
                                        <Key frame="89" value="0" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="-22.2" />
                                        <Key frame="35" value="29.3" />
                                        <Key frame="65" value="29.3" />
                                        <Key frame="89" value="81.2851" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="-40.081" />
                                        <Key frame="35" value="-53.2" />
                                        <Key frame="65" value="-53.2" />
                                        <Key frame="89" value="-52" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="102.743" />
                                        <Key frame="35" value="104.5" />
                                        <Key frame="65" value="104.5" />
                                        <Key frame="89" value="88.6804" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Timeline" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="790" y="393">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="-29.8828" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="-70.4883" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="25" value="0.603691" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="89.2969" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="8.34961" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="-1.58445" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="30.2344" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="70.4883" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="25" value="0.598418" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="89.3848" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="-8.26171" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="1.75543" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Comment" id="5" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="53" y="19">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("会話と、タブレットの表示を連携するサンプルです。\n\n会話部分は kaiwa1_jpj.top で編集します。タブレットは表示する画像ファイルを html/images フォルダーの中に保存しておきます。\n\n会話の流れで画像を表示するとき kaiwa1_jpj.top の中で $showImage=画像ファイル名 と記述します。")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[会話と、タブレットの表示を連携するサンプルです。

会話部分は kaiwa1_jpj.top で編集します。タブレットは表示する画像ファイルを html/images フォルダーの中に保存しておきます。

会話の流れで画像を表示するとき kaiwa1_jpj.top の中で $showImage=画像ファイル名 と記述します。]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Comment (1)" id="6" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="283" y="28">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("kaiwa1_jpj.top 特別な記述：\n\n画像の表示\n$showImage=画像ファイル\n\n画像を隠す\n$hideImage=1\n\nタブレットを指す仕草\n$pointTablet=1\n\nアプリ終了\n$onStopped=1 ")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[kaiwa1_jpj.top 特別な記述：

画像の表示
$showImage=画像ファイル

画像を隠す
$hideImage=1

タブレットを指す仕草
$pointTablet=1

アプリ終了
$onStopped=1 ]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Comment (2)" id="7" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="658" y="78">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Show Image ボックスは最適化されています。\n開発途中で画像ファイルが入れ替わる可能性がある間はプロパティーで mode を\'開発\' にアプリが完成したら \'製品\' に設定してください\n\n（同じファイル名で中身が入れ替えられたとき、更新されたファイルが表示されるようにするキャッシュブレーク処理と、表示を早くするためのプリロード処理を行うよう拡張されています。\'製品\' モードに設定するとキャッシュブレーク処理を省略します）")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[Show Image ボックスは最適化されています。
開発途中で画像ファイルが入れ替わる可能性がある間はプロパティーで mode を'開発' にアプリが完成したら '製品' に設定してください

（同じファイル名で中身が入れ替えられたとき、更新されたファイルが表示されるようにするキャッシュブレーク処理と、表示を早くするためのプリロード処理を行うよう拡張されています。'製品' モードに設定するとキャッシュブレーク処理を省略します）]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Comment (3)" id="8" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="73" y="462">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Init ボックス プロパティーにて音声認識の閾値を変更できます。")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[Init ボックス プロパティーにて音声認識の閾値を変更できます。]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Link inputowner="13" indexofinput="3" outputowner="1" indexofoutput="5" />
                        <Link inputowner="13" indexofinput="5" outputowner="1" indexofoutput="6" />
                        <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="13" indexofinput="5" outputowner="1" indexofoutput="7" />
                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="7" />
                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
